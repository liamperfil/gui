#!/usr/bin/env python3
# Copyright (c) 2012-2021 The Bitcoin Core developers
# Distributed under the MIT software license, see the accompanying
# file COPYING or http://www.opensource.org/licenses/mit-license.php.

'''
Extract _("...") strings for translation and convert to Qt stringdefs
so that they can be picked up by Qt linguist.
'''

import os
import sys
import subprocess

# === Constantes ===
OUT_CPP = "qt/bitcoinstrings.cpp"
QT_TRANSLATE_DOMAIN = "bitcoin-core"
COPYRIGHT_HOLDERS = os.getenv('COPYRIGHT_HOLDERS', 'The Bitcoin Core developers')

# === Função para parsear saída do xgettext ===
def parse_po(text):
    """
    Parse 'po' format produced by xgettext.
    Returns a list of msgid strings.
    """
    messages = []
    msgid = []
    in_msgid = False

    for line in text.splitlines():
        line = line.strip()
        if line.startswith('msgid '):
            if msgid:
                messages.append(''.join(msgid))
                msgid = []
            in_msgid = True
            msgid.append(line[6:].strip())
        elif line.startswith('msgstr '):
            in_msgid = False
        elif line.startswith('"') and in_msgid:
            msgid.append(line.strip())

    if msgid:
        messages.append(''.join(msgid))

    return [m for m in messages if m != '""']


# === Verifica se xgettext está disponível ===
XGETTEXT = os.getenv('XGETTEXT', 'xgettext')
if not XGETTEXT:
    print('xgettext utility is not installed or configured.', file=sys.stderr)
    sys.exit(1)

# === Executa xgettext ===
try:
    result = subprocess.run(
        [XGETTEXT, '--output=-', '--from-code=utf-8', '-n', '--keyword=_'] + sys.argv[1:],
        check=True,
        stdout=subprocess.PIPE,
        stderr=subprocess.PIPE,
        encoding='utf-8'
    )
except subprocess.CalledProcessError as e:
    print(f"Error running xgettext: {e.stderr}", file=sys.stderr)
    sys.exit(1)

# === Processa as mensagens extraídas ===
messages = parse_po(result.stdout)
messages = sorted(set(messages))

# === Geração do arquivo C++ ===
with open(OUT_CPP, 'w', encoding='utf-8') as f:
    f.write("""\
// Automatically generated by extract_strings_qt.py

#include <QtGlobal>

""")
    f.write('[[maybe_unused]] static const char *bitcoin_strings[] = {\n')
    f.write(f'    QT_TRANSLATE_NOOP("{QT_TRANSLATE_DOMAIN}", "{COPYRIGHT_HOLDERS}"),\n')

    for msg in messages:
        f.write(f'    QT_TRANSLATE_NOOP("{QT_TRANSLATE_DOMAIN}", {msg}),\n')

    f.write('};\n')

print(f"Generated {OUT_CPP} with {len(messages)} messages.")